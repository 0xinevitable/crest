/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/funding-rates': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get funding rates
     * @description Retrieve funding rates for various tickers
     */
    get: operations['getFundingRates'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/funding-rates/{id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get funding rate by ID
     * @description Retrieve a specific funding rate by its ID
     */
    get: operations['getFundingRateById'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    FundingRate: {
      /**
       * @description Unique identifier for the funding rate record
       * @example 123
       */
      id: number;
      /**
       * @description Trading pair symbol
       * @example BTC-USD
       */
      ticker: string;
      /**
       * @description Funding rate as a string to preserve precision
       * @example 0.0001
       */
      fundingRate: string;
      /**
       * Format: date-time
       * @description Timestamp when the funding rate was recorded
       * @example 2024-01-15T10:30:00Z
       */
      readingTime: string;
      /**
       * Format: date-time
       * @description Timestamp when the record was created in the database
       * @example 2024-01-15T10:30:05Z
       */
      createdAt: string;
    };
    Pagination: {
      /**
       * @description Total number of records
       * @example 1000
       */
      total?: number;
      /**
       * @description Maximum number of records returned
       * @example 100
       */
      limit?: number;
      /**
       * @description Number of records skipped
       * @example 0
       */
      offset?: number;
      /**
       * @description Whether there are more records available
       * @example true
       */
      hasNext?: boolean;
    };
    Error: {
      /**
       * @description Error type
       * @example ValidationError
       */
      error: string;
      /**
       * @description Human-readable error message
       * @example Invalid ticker parameter
       */
      message: string;
      /** @description Additional error details */
      details?: {
        [key: string]: unknown;
      };
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  getFundingRates: {
    parameters: {
      query?: {
        /** @description Filter by ticker symbol */
        ticker?: string;
        /** @description Maximum number of records to return */
        limit?: number;
        /** @description Number of records to skip */
        offset?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            data?: components['schemas']['FundingRate'][];
            pagination?: components['schemas']['Pagination'];
          };
        };
      };
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description Internal server error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  getFundingRateById: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description Funding rate ID */
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Successful response */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['FundingRate'];
        };
      };
      /** @description Funding rate not found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description Internal server error */
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
}
